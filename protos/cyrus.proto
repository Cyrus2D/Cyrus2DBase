
syntax = "proto3";

package cyrus;

message Vec2D {
  float X = 1;
  float Y = 2;
}

message GoToPointStateMessage {
    Vec2D Position = 1;
    float Body = 2;
    float BodyDiff = 3;
}

message GoToBallStateMessage {
    Vec2D Position = 1;
    float Body = 2;
    Vec2D BallPosition = 3;
    float BodyDiff = 4;
}

message RawListMessage {
    repeated float Value = 1;
}

message StateMessage {
    int32 Cycle = 1;
    oneof State {
        RawListMessage RawList = 2;
        GoToPointStateMessage GoToPointState = 3;
        GoToBallStateMessage GoToBallState = 4;
    }
}

message ActionDashMessage {
    float Power = 1;
    float Dir = 2;
}

message ActionTurnMessage {
    float Dir = 1;
}

message Action {
    oneof action {
        RawListMessage RawList = 1;
        ActionDashMessage Dash = 2;
        ActionTurnMessage Turn = 3;
    }
}

message TrainerRequest {
    int32 Cycle = 1;
    float Reward = 2;
    int32 Unum = 3;
    bool Done = 4;
    bool Start = 5;
    int32 Statud = 6;
}

message StartEpisode{
    int32 Cycle = 1;
}

message OK {
    bool OK = 1;
}

service SampleService {
    rpc GetBestAction(StateMessage) returns (Action) {}
    rpc SetTrainerRequest(TrainerRequest) returns (OK) {}
}
